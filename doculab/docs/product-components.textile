Components allow you to introduce additional "line items" to your Products that are often expressed as "add-ons", upsold features, or pay-per-use items. See the "blog post about quantity-based components":http://chargify.com/blog/new-feature-quantity-based-components/ that introduces the Components feature in general.

Components are defined at the Product Family level, and are therefore available to all Products within the Family.

p(note). Quantity-Based and On/Off Components associated with a Subscription are billed *in advance* along with the product, while Metered Component usage is billed in arrears.  See "Setting Component Allocations":/setting-component-allocations for more information.

h2. Types of Components

h3(#quantity-based-components). Quantity-based

This component type would be used when a Subscription is provisioned with a certain quantity of an item, and charges are calculated based on that quantity (i.e. "per-seat").  These components also give the ability to use different pricing schemes, such as per-unit, volume, tiered, and stairstep. Some examples:

* IP Addresses - say your basic service offers 1 custom IP address for free, and extras can be purchased for $1 each
* Extra Projects - say your project management service allows users to purchase extra "projects" a la carte for $5/each/month.
* Software seats that cost $100/each when you buy 1-5, $90/each when you buy 6-10, etc.
* Charge flat fees based on a number of customers (like how Chargify works):
** 0-50 customers = $0
** 51-500 = $49
** etc

Each "widget" that you've reported to us as being in use is assumed to remain in use by that Customer until some future change.  In other words, the quantity allocated does NOT reset to 0 at the end of the billing period.  In contrast, Metered-usage component usages DO reset to 0 at the end of the period.


h3(#metered-components). Metered-usage

For Metered Components, you tell us every time one of your Customers uses some unit or units of your "widgets". At the end of the billing period, Chargify will bill your customer for the total number of widgets used, and then we will reset the widget count to zero and the whole process starts over for the new billing period.

Note that this is different from Quantity-based components, which DO NOT reset to zero at the start of every billing period. If you want to bill for a quantity of something that does not change unless you change it, then you want Quantity Components, instead.

Some examples:

* An email gateway provides 1000 credits per period, but allows you to send over your credit limit at a cost of $0.10 per email per period
* A hosting company that charges for hours of compute time at a certain cost per hour

h3(#on-off-components). On/Off

This component type is used to elect "add-on" options where electing the option results in an extra charge. Some examples:

* A web app offers an SSL connection upgrade at $5/month


h2. Creating/Configuring Components available for Product Families

Components are defined on the Product Family level, and are available to all Products within the Family.  To create any Component for a Product Family, start on the "Products" tab and click "Create a Component".

!{width:640px}/images/doculab/prod-comp-1.png!

Next, you'll be able to choose what type of component to create.

!{width:640px}/images/doculab/prod-comp-2.png!


h3. Creating Quantity-based Components

Choose to create a "Quantity Based Component" and define it using the form.

!https://s3.amazonaws.com/entp-tender-production/assets/3cd793004f7796295b38fdbcb07a3c6aa54306da/_Chargify__Acme__Inc.___My_Site___New_Quantity_Based_Component_3_normal.png!

Quantity Components support 4 "pricing schemes" via a dropdown select on this form: per-unit, volume, tiered, and stairstep.  The latter 3 schemes (volume, tiered, and stairstep) allow you to define multiple price brackets (or "steps"), so you can charge different amounts depending on the quantity allocated.

!https://s3.amazonaws.com/entp-tender-production/assets/33d3404d8c3facd6fe2f8088a0381a92f8e887f5/price_brackets_normal.png!

h4. General Price Bracket Rules

* No Overlap: Brackets may not overlap in quantity
* No Gaps: Gaps in quantity are not allowed; however the lowest bracket need not start at 1
* *Defining Infinity:* One bracket with a blank "ending quantity" is allowed - a blank value here indicates an unbounded quantity (&infin;)
* Per-Unit or Per-Bracket: Prices should be given as "per unit" for per-unit, tiered, and volume pricing schemes. Prices for the stairstep pricing scheme are given as a cost for the entire bracket.

h4. Per-unit Pricing Scheme

In a per-unit pricing scheme, prices are defined as per-unit costs, and all units cost the same.  Thus, only 1 price bracket may be defined.  If you define a component for "IP Addresses" that cost $1/each/period and a customer buys 3, then a $3 charge would be added at the end of the period.

h4. Tiered Pricing Scheme

In the tiered pricing scheme, multiple price brackets define the prices at different quantity levels.  Prices are given on a per-unit basis.  Your customers will pay the defined price per unit for each allocated unit.  An example can illustrate this the best.  Say you allow your customers to purchase extra widgets to augment their monthly plan.  The pricing structure is defined as follows:

|_. Starting quantity |_. Ending quantity |_. Price each  |
|   1                 |   10              |   $2          |
|   11                |   20              |   $1          |

If a customer buys 10 units, they will pay $2 per unit, for a total of $20.

If a customer buys 20 units, they will pay $2 each for the first 10 units, plus $1 each for the next 10 units, for a total of $30 (10 x $2 + 10 x $1).

h4. Volume Pricing Scheme

In the volume pricing scheme, multiple price brackets define the prices at different quantity levels, much like in the tiered scheme.  However, unlike the tiered scheme, the price per unit for all units is determined by the prevailing price for the allocated quantity.  So, taking the pricing setup from the earlier example:

|_. Starting quantity |_. Ending quantity |_. Price each  |
|   1                 |   10              |   $2          |
|   11                |   20              |   $1          |

If a customer buys 10 units, they will pay $2 per unit, for a total of $20.

If a customer buys 20 units, they will pay $1 per unit for all units, for a total of $20.


h4. Stairstep Pricing Scheme

In the stairstep pricing scheme, multiple price brackets are defined, but the pricing is given as a total cost for the whole bracket instead of per unit costs.  This is how Chargify itself works.

|_. Starting quantity |_. Ending quantity |_. Price |
|   1                 |   10              |   $10   |
|   11                |   20              |   $20   |

If 10 units are allocated (i.e. 10 paying customers), then the cost would be $10 total for this component.

If 20 units are allocated, then the cost would be $20 total for this component.

h4. Fractional Allocations

Quantity component allocations are represented as whole numbers by default (i.e. 5 Licenses). Checking 'Allow fractional quantities' setting will allow you to allocate partial quantities (i.e. 4.5 Minutes). API representations of this component will return a decimal instead of an integer for the quantity values.

h3. Creating Metered Components

Choose to create a "Metered Component" and define it using the form.

Creating a Metered Component works exactly like creating a Quantity Based Component (see above).

Once you have created a Metered Component, it will appear under the Product Family on the Products tab. You can make changes to the component by clicking the 'Edit' link.

!https://s3.amazonaws.com/entp-tender-production/assets/935dc96e5323745369be443fb3270adcd4dd5909/metered_index_normal.jpg!

h3. Creating On/Off Components

Choose to create a "On/Off" and define it using the form.

An On/Off Component consists of 3 pieces of information:

* **Name**: The name of the Component. i.e. Text Messages
* **Price**: The amount the customer will be charged per unit


Once you have created an On/Off Component, it will appear under the Product Family on the Products tab. You can make changes to the component by clicking the 'Edit' link.


h4. Fractional Usages

Metered component usages are represented as whole numbers by default (i.e. 5 Licenses). Checking 'Allow fractional quantities' setting will allow you to allocate partrial quantities (i.e 4.5 Minutes). API representations of this component will return a decimal instead of an integer for the quantity values.

h2. Setting Component allocations on Subscriptions

Once a Component has been defined for a Product Family, any Subscription to a Product within that Family may have usage or allocation data reported in order to assess charges for them at the end of the period.

For more information, please see "Setting Component Allocations":/setting-component-allocations.

p(note). At this time, the current minimum price that you can set for any component's unit price or price at each tier is $0.0001.
